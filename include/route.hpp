#ifndef ROUTE_HPP
#define ROUTE_HPP

#include <functional>
#include <regex>
#include <string>

#include "request.hpp"
#include "response.hpp"

namespace router {

/**
 * @class Route
 * @brief Represents an individual route in the router.
 *
 * This class encapsulates the details of a route, including
 * the HTTP method, path, and handler function.
 */
class Route {
 public:
  /**
   * @brief Constructor for the Route class.
   *
   * @param method The HTTP method (e.g., GET, POST).
   * @param path The path for the route (e.g., /home).
   * @param handler The handler function for the route.
   */
  Route(const std::string &method, const std::string &path,
        const std::function<http::Response(const http::Request &)> &handler);

  /**
   * @brief Checks if the route matches the given request.
   *
   * @param request The HTTP request to check.
   * @return True if the route matches the request, false otherwise.
   */
  bool matches(const http::Request &request) const;

  /**
   * @brief Handles the request if it matches the route.
   *
   * @param request The HTTP request to handle.
   * @return The HTTP response generated by the handler.
   */
  http::Response handle(const http::Request &request) const;

  /**
   * @brief Gets the HTTP method of the route.
   *
   * @return The HTTP method as a string.
   */
  std::string getMethod() const;

  /**
   * @brief Gets the path of the route.
   *
   * @return The path as a string.
   */
  std::string getPath() const;

  /**
   * @brief Gets the handler function of the route.
   *
   * @return The handler function.
   */
  std::function<http::Response(const http::Request &)> getHandler() const;

 private:
  std::string method;  ///< The HTTP method of the route.
  std::string path;    ///< The path of the route.
  std::function<http::Response(const http::Request &)>
      handler;  ///< The handler function for this route.

  /**
   * @brief Helper function to convert path parameters to a regex pattern.
   *
   * @return The regex pattern as a string.
   */
  std::string pathToRegex(const std::string &path) const;
};

}  // namespace router

#endif  // ROUTE_HPP
